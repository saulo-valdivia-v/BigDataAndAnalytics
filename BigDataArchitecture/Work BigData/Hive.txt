create external table MadridData(
PROVINCIA STRING,
MUNICIPIO STRING,
ESTACION STRING,
MAGNITUD STRING,
PUNTO_MUESTREO STRING,
ANO STRING,
MES STRING,
DIA STRING,
H01 INT,
V01 STRING,
H02 INT,
V02 STRING,
H03 INT,
V03 STRING,
H04 INT,
V04 STRING,
H05 INT,
V05 STRING,
H06 INT,
V06 STRING,
H07 INT,
V07 STRING,
H08 INT,
V08 STRING,
H09 INT,
V09 STRING,
H10 INT,
V10 STRING,
H11 INT,
V11 STRING,
H12 INT,
V12 STRING,
H13 INT,
V13 STRING,
H14 INT,
V14 STRING,
H15 INT,
V15 STRING,
H16 INT,
V16 STRING,
H17 INT,
V17 STRING,
H18 INT,
V18 STRING,
H19 INT,
V19 STRING,
H20 INT,
V20 STRING,
H21 INT,
V21 STRING,
H22 INT,
V22 STRING,
H23 INT,
V23 STRING,
H24 INT,
V24 STRING
)
row format serde 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
with serdeproperties (
	"separatorChar" = ";"
);

create external table m(
PROVINCIA STRING,
MUNICIPIO STRING,
ESTACION STRING,
MAGNITUD STRING,
PUNTO_MUESTREO STRING,
ANO STRING,
MES STRING,
DIA STRING,
H01 INT,
V01 STRING,
H02 INT,
V02 STRING,
H03 INT,
V03 STRING,
H04 INT,
V04 STRING,
H05 INT,
V05 STRING,
H06 INT,
V06 STRING,
H07 INT,
V07 STRING,
H08 INT,
V08 STRING,
H09 INT,
V09 STRING,
H10 INT,
V10 STRING,
H11 INT,
V11 STRING,
H12 INT,
V12 STRING,
H13 INT,
V13 STRING,
H14 INT,
V14 STRING,
H15 INT,
V15 STRING,
H16 INT,
V16 STRING,
H17 INT,
V17 STRING,
H18 INT,
V18 STRING,
H19 INT,
V19 STRING,
H20 INT,
V20 STRING,
H21 INT,
V21 STRING,
H22 INT,
V22 STRING,
H23 INT,
V23 STRING,
H24 INT,
V24 STRING
)
row format serde 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
with serdeproperties (
	"separatorChar" = ";"
);

CREATE TABLE employees (
    id INT NOT NULL,
    fname VARCHAR(30),
    lname VARCHAR(30),
    hired DATE NOT NULL DEFAULT '1970-01-01',
    separated DATE NOT NULL DEFAULT '9999-12-31',
    job_code INT,
    store_id INT
)
PARTITION BY HASH(store_id)
PARTITIONS 4;

create table test4(
PROVINCIA STRING,
MUNICIPIO STRING,
ESTACION STRING,
MAGNITUD STRING,
PUNTO_MUESTREO STRING,
ANO STRING,
MES STRING,
DIA STRING,
H01 INT,
V01 STRING,
H02 INT,
V02 STRING,
H03 INT,
V03 STRING,
H04 INT,
V04 STRING,
H05 INT,
V05 STRING,
H06 INT,
V06 STRING,
H07 INT,
V07 STRING,
H08 INT,
V08 STRING,
H09 INT,
V09 STRING,
H10 INT,
V10 STRING,
H11 INT,
V11 STRING,
H12 INT,
V12 STRING,
H13 INT,
V13 STRING,
H14 INT,
V14 STRING,
H15 INT,
V15 STRING,
H16 INT,
V16 STRING,
H17 INT,
V17 STRING,
H18 INT,
V18 STRING,
H19 INT,
V19 STRING,
H20 INT,
V20 STRING,
H21 INT,
V21 STRING,
H22 INT,
V22 STRING,
H23 INT,
V23 STRING,
H24 INT,
V24 STRING
)
PARTITIONED BY (ANO STRING,MES STRING)
PARTITION BY RANGE (ANO, MES) (
    PARTITION p0 VALUES LESS THAN ('2020', '01'),
	PARTITION p1 VALUES LESS THAN ('2020', '02'),
    PARTITION p2 VALUES LESS THAN (MAXVALUE)
);

	
	
INSERT INTO test3
SELECT * FROM test1
WHERE MES='01'

INSERT OVERWRITE TABLE tt1 PARTITION (ANO, MES)
SELECT ESTACION, ANO, MES, DIA FROM test1 WHERE MES='01' and H01='00008' and ESTACION='4';


CREATE TABLE table_csv_export_data_1
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED as textfile
AS
select
'PROVINCIA' as PROVINCIA
,'MUNICIPIO' as MUNICIPIO
,'ESTACION' as ESTACION
,'ANO' as ANO
,'MES' as MES
,'DIA' as DIA
,'H01' as H01
,'V01' as V01
,'H02' as H02
,'V02' as V02
,'H03' as H03
,'V03' as V03
,'H04' as H04
,'V04' as V04
,'H05' as H05
,'V05' as V05
,'H06' as H06
,'V06' as V06
,'H07' as H07
,'V07' as V07
,'H08' as H08
,'V08' as V08
,'H09' as H09
,'V09' as V09
,'H10' as H10
,'V10' as V10
,'H11' as H11
,'V11' as V11
,'H12' as H12
,'V12' as V12
,'H13' as H13
,'V13' as V13
,'H14' as H14
,'V14' as V14
,'H15' as H15
,'V15' as V15
,'H16' as H16
,'V16' as V16
,'H17' as H17
,'V17' as V17
,'H18' as H18
,'V18' as V18
,'H19' as H19
,'V19' as V19
,'H20' as H20
,'V20' as V20
,'H21' as H21
,'V21' as V21
,'H22' as H22
,'V22' as V22
,'H23' as H23
,'V23' as V23
,'H24' as H24
,'V24' as V24;





INSERT INTO table_csv_export_data_1
SELECT
 PROVINCIA
 ,MUNICIPIO
 ,ESTACION
 ,ANO
 ,MES
 ,DIA
 ,H01
 ,V01
 ,H02
 ,V02
 ,H03
 ,V03
 ,H04
 ,V04
 ,H05
 ,V05
 ,H06
 ,V06
 ,H07
 ,V07
 ,H08
 ,V08
 ,H09
 ,V09
 ,H10
 ,V10
 ,H11
 ,V11
 ,H12
 ,V12
 ,H13
 ,V13
 ,H14
 ,V14
 ,H15
 ,V15
 ,H16
 ,V16
 ,H17
 ,V17
 ,H18
 ,V18
 ,H19
 ,V19
 ,H20
 ,V20
 ,H21
 ,V21
 ,H22
 ,V22
 ,H23
 ,V23
 ,H24
 ,V24
 FROM test1 where MES='01' and DIA='01'
 
 hdfs dfs -cat /user/hive/warehouse/table_csv_export_data_1/* > ~/output1.csv

beeline -u jdbc:hive2://
 
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;

drop table medidasAirePart; 

create table medidasAirePart (
PROVINCIA INT, MUNICIPIO INT, ESTACION INT, MAGNITUD INT, 
PUNTO_MUESTREO INT, PERIODO_ANA INT, ANO INT, DIA INT, 

H01 FLOAT, V01 STRING, H02 FLOAT, V02 STRING, H03 FLOAT, V03 STRING,
H04 FLOAT, V04 STRING, H05 FLOAT, V05 STRING, H06 FLOAT, V06 STRING, 
H07 FLOAT, V07 STRING, H08 FLOAT, V08 STRING, H09 FLOAT, V09 STRING, 
H10 FLOAT, V10 STRING, H11 FLOAT, V11 STRING, H12 FLOAT, V12 STRING, 
H13 FLOAT, V13 STRING, H14 FLOAT, V14 STRING, H15 FLOAT, V15 STRING,
H16 FLOAT, V16 STRING, H17 FLOAT, V17 STRING, H18 FLOAT, V18 STRING,
H19 FLOAT, V19 STRING, H20 FLOAT, V20 STRING, H21 FLOAT, V21 STRING, 
H22 FLOAT, V22 STRING, H23 FLOAT, V23 STRING, H24 FLOAT, V24 STRING) 
  
partitioned by (MES INT)
row format DELIMITED
fields terminated by ',';  

insert into medidasAirePart 
partition(MES)
select *  
from medidasaire;


create table medidasAirePart1 (
PROVINCIA STRING, MUNICIPIO STRING, ESTACION STRING, MAGNITUD STRING, 
PUNTO_MUESTREO STRING, ANO STRING, DIA STRING, 
H01 INT, V01 STRING,
H02 INT, V02 STRING,
H03 INT, V03 STRING,
H04 INT, V04 STRING,
H05 INT, V05 STRING,
H06 INT, V06 STRING,
H07 INT, V07 STRING,
H08 INT, V08 STRING,
H09 INT, V09 STRING,
H10 INT, V10 STRING,
H11 INT, V11 STRING,
H12 INT, V12 STRING,
H13 INT, V13 STRING,
H14 INT, V14 STRING,
H15 INT, V15 STRING,
H16 INT, V16 STRING,
H17 INT, V17 STRING,
H18 INT, V18 STRING,
H19 INT, V19 STRING,
H20 INT, V20 STRING,
H21 INT, V21 STRING,
H22 INT, V22 STRING,
H23 INT, V23 STRING,
H24 INT, V24 STRING)
partitioned by (MES STRING)
row format DELIMITED
fields terminated by ','; 


create table medidasAire_part1(
PROVINCIA STRING, MUNICIPIO STRING, ESTACION STRING, MAGNITUD STRING, 
PUNTO_MUESTREO STRING, DIA STRING,
H01 INT, V01 STRING, H02 INT, V02 STRING, H03 INT, V03 STRING, H04 INT, V04 STRING, 
H05 INT, V05 STRING, H06 INT, V06 STRING, H07 INT, V07 STRING, H08 INT, V08 STRING, 
H09 INT, V09 STRING, H10 INT, V10 STRING, H11 INT, V11 STRING, H12 INT, V12 STRING, 
H13 INT, V13 STRING, H14 INT, V14 STRING, H15 INT, V15 STRING, H16 INT, V16 STRING, 
H17 INT, V17 STRING, H18 INT, V18 STRING, H19 INT, V19 STRING, H20 INT, V20 STRING, 
H21 INT, V21 STRING, H22 INT, V22 STRING, H23 INT, V23 STRING, H24 INT, V24 STRING) 
PARTITIONED BY(ANO STRING, MES STRING);

set hive.exec.dynamic.partition.mode=nonstrict;

INSERT OVERWRITE TABLE medidasAire_part1 
PARTITION(ANO, MES) 
SELECT PROVINCIA,MUNICIPIO,ESTACION,MAGNITUD,PUNTO_MUESTREO,DIA,
H01,V01,H02,V02,H03,V03,H04,V04,H05,V05,H06,V06,H07,V07,H08,V08,H09,V09,H10,
V10,H11,V11,H12,V12,H13,V13,H14,V14,H15,V15,H16,V16,H17,V17,H18,V18,H19,V19,
H20,V20,H21,V21,H22,V22,H23,V23,H24,V24,ANO,MES from madriddata;

La arquitectura que mejor se adapta es la arquitectura Lambda. Debido a que no
existe una gran sobrecarga de informacion que requiera una arquitectura especifica
para Streaming. Otro motivo por el cual se justifica la arquitectura lambda
es debido a que tenemos un repositorio central con todos los datos historicos al menos
de un aÃ±o.


create table queryHive ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED as textfile AS SELECT 
'ANO' as ANO ,'MES' as MES ,'DIA' as DIA ,'MAGNITUD' as MAGNITUD
,'H01' as H01,'H02' as H02,'H03' as H03,'H04' as H04,'H05' as H05,'H06' as H06
,'H07' as H07,'H08' as H08,'H09' as H09,'H10' as H10,'H11' as H11,'H12' as H12
,'H13' as H13,'H14' as H14,'H15' as H15,'H16' as H16,'H17' as H17,'H18' as H18
,'H19' as H19,'H20' as H20,'H21' as H21,'H22' as H22,'H23' as H23,'H24' as H24;

INSERT INTO queryHive 
SELECT ANO, MES, DIA, MAGNITUD, 
avg(H01) AS H01, avg(H02) AS H02, avg(H03) AS H03, avg(H04) AS H04, 
avg(H05) AS H05, avg(H06) AS H06, avg(H07) AS H07, avg(H08) AS H08, 
avg(H09) AS H09, avg(H10) AS H10, avg(H11) AS H11, avg(H12) AS H12, 
avg(H13) AS H13, avg(H14) AS H14, avg(H15) AS H15, avg(H16) AS H16, 
avg(H17) AS H17, avg(H18) AS H18, avg(H19) AS H19, avg(H20) AS H20, 
avg(H21) AS H21, avg(H22) AS H22, avg(H23) AS H23, avg(H24) AS H24 
from madriddata group by ANO, MES, DIA, MAGNITUD;

hdfs dfs -cat /user/hive/warehouse/queryhive/* > ~/queryHive.csv