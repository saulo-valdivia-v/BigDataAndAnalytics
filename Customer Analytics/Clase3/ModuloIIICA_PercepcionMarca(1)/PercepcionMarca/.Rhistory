library(tidyverse) #transformar y visualizar la data
library(psych) #normalizar los datos
library(corrplot) #graficar correlaciones
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_datos.csv", stringsAsFactors = F) %>%
select(-1) #la primera columna es el index de cada fila y no es relevante, la descarto
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
table(Encuesta_Marcas$Brand)
#graficamos la correlaci?n entre los datos para ir explorando la relaci?n entre diferentes adjetivos
corrplot(cor(Encuesta_Marcas[ , 1:9]), order="hclust")
#Por ultimo para terminar la inspecci?n, creamos una matrix con la media de puntuaci?n
Encuesta_MarcasMedia <- aggregate(. ~ Brand, Encuesta_Marcas, mean)
row.names(Encuesta_MarcasMedia) <- Encuesta_MarcasMedia$Brand
Encuesta_MarcasMedia$Brand <- NULL
#vemos r?pidamente que caracter?sticas est?n asociadas con cada marca con un heatmap
heatmap(as.matrix(Encuesta_MarcasMedia))
##### PRINCIPAL COMPONENT ANALYSIS #####
# Aplicando prcomp podemos analizar cu?ntos componentes son necesarios
#para explicar la variabilidad en la data de la encuesta de percepci?n
EncuestaMarcas_PCA <- prcomp(Encuesta_Marcas[ , 1:9])
summary(EncuestaMarcas_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(EncuestaMarcas_PCA, type="l") #type l indica gr?fico de linea
biplot(EncuestaMarcas_PCA)
biplot(EncuestaMarcas_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(EncuestaMarcas_PCA, choices = 3:4, cex = c(0.3, 0.6))
# using the aggregate, mean PRST brand ratings, plot the brands against the first two components. How do you interpret that? Now plot against the second and third components
#Qu?How does that change your interpretation?
#What does this tell you about PCA in general?
EncuestaMarcas_PCAMean <- prcomp(Encuesta_MarcasMedia)
#Utilizamos la funci?n scale para "normalizar" los datos a trav?s de la media y la sd
#por las dudas primero duplicamos el data frame para no perder la data inicial
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale[ , 1:9] <- (scale(Encuesta_Marcas[ , 1:9]))
#utilizamos describe de librer?a psych que es para psicolog?a, pero muy ?til
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
corrplot(cor(Encuesta_MarcasScale[ , 1:9]), order="hclust") #pero la correlaci?n se mantiene igual
Encuesta_MarcasScale_PCA <- prcomp(Encuesta_MarcasScale[ , 1:9])
summary(Encuesta_MarcasScale_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(Encuesta_MarcasScale_PCA, type="l") #los primeros 4 componentes son los m?s relevantes
biplot(Encuesta_MarcasScale_PCA, cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = 3:4, cex = c(0.3, 0.6))
#?Qu? sucede con la data de medias? ?Que an?lisis podemos obtener de su procesamiento?
Encuesta_MarcasMedia_PCA <- prcomp(Encuesta_MarcasMedia[ , 1:9], scale. = T)
#?Que sucede con la data de medias? ?Que analisis podemos obtener de su procesamiento?
Encuesta_MarcasMedia_PCA <- prcomp(Encuesta_MarcasMedia[ , 1:9], scale. = T)
summary(Encuesta_MarcasMedia_PCA)
biplot(Encuesta_MarcasMedia_PCA, cex = c(0.9, 0.6))
#Grafiquemos de forma arm?nica los resultados de PCA
install.packages("factoextra")
library("factoextra")
get_pca_var(EncuestaMarcas_PCA) #me permite identificar el nombre de las variables
fviz_pca_var(EncuestaMarcas_PCA, col.var = "blue")
fviz_pca_var(EncuestaMarcas_PCA, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # evita overlaping del texto
)
fviz_pca_var(Encuesta_MarcasMedia_PCA, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_pca_ind(Encuesta_MarcasMedia_PCA, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_datos.csv", stringsAsFactors = F) %>%
select(-1) #la primera columna es el index de cada fila y no es relevante, la descarto
library(tidyverse) #transformar y visualizar la data
library(psych) #normalizar los datos
library(corrplot) #graficar correlaciones
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_datos.csv", stringsAsFactors = F) %>%
select(-1) #la primera columna es el index de cada fila y no es relevante, la descarto
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
table(Encuesta_Marcas$Brand)
#Por ultimo para terminar la inspeccion, creamos una matrix con la media de puntuaci?n
Encuesta_MarcasMedia <- aggregate(. ~ Brand, Encuesta_Marcas, mean)
row.names(Encuesta_MarcasMedia) <- Encuesta_MarcasMedia$Brand
Encuesta_MarcasMedia$Brand <- NULL
#vemos r?pidamente que caracter?sticas est?n asociadas con cada marca con un heatmap
heatmap(as.matrix(Encuesta_MarcasMedia))
##### PRINCIPAL COMPONENT ANALYSIS #####
# Aplicando prcomp podemos analizar cu?ntos componentes son necesarios
#para explicar la variabilidad en la data de la encuesta de percepci?n
EncuestaMarcas_PCA <- prcomp(Encuesta_Marcas[ , 1:9])
summary(EncuestaMarcas_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(EncuestaMarcas_PCA, type="l") #type l indica gr?fico de linea
biplot(EncuestaMarcas_PCA)
biplot(EncuestaMarcas_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(EncuestaMarcas_PCA, choices = 3:4, cex = c(0.3, 0.6))
#Utilizamos la funcion scale para "normalizar" los datos a traves de la media y la sd
#por las dudas primero duplicamos el data frame para no perder la data inicial
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale[ , 1:9] <- (scale(Encuesta_Marcas[ , 1:9]))
#utilizamos describe de librer?a psych que es para psicologia, pero muy util
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
corrplot(cor(Encuesta_MarcasScale[ , 1:9]), order="hclust") #pero la correlacion se mantiene igual
Encuesta_MarcasScale_PCA <- prcomp(Encuesta_MarcasScale[ , 1:9])
summary(Encuesta_MarcasScale_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(Encuesta_MarcasScale_PCA, type="l") #los primeros 4 componentes son los m?s relevantes
biplot(Encuesta_MarcasScale_PCA, cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = 3:4, cex = c(0.3, 0.6))
library("factoextra")
get_pca_var(EncuestaMarcas_PCA) #me permite identificar el nombre de las variables
fviz_pca_var(EncuestaMarcas_PCA, col.var = "blue")
fviz_pca_var(EncuestaMarcas_PCA, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # evita overlaping del texto
)
library(tidyverse) #transformar y visualizar la data
library(psych) #normalizar los datos
library(corrplot) #graficar correlaciones
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_dataset.csv", stringsAsFactors = F) %>%
select(-1) %>% #la primera columna es el index de cada fila y no es relevante, la descarto
mutate(brand = as.factor(brand))
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
table(Encuesta_Marcas$Brand)
table(Encuesta_Marcas$Brand)
table(Encuesta_Marcas$Brand)
table(Encuesta_Marcas$Brand)
#graficamos la correlaci?n entre los datos para ir explorando la relaci?n entre diferentes adjetivos
corrplot(cor(Encuesta_Marcas[ , 1:9]), order="hclust")
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_dataset.csv", stringsAsFactors = F) %>%
select(-1) %>% #la primera columna es el index de cada fila y no es relevante, la descarto
mutate(brand = as.factor(brand))
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
table(Encuesta_Marcas$Brand)
table(Encuesta_Marcas$Brand)
View(Encuesta_Marcas)
View(Encuesta_Marcas)
table(Encuesta_Marcas$brand)
table(Encuesta_Marcas$brand)
#graficamos la correlaci?n entre los datos para ir explorando la relaci?n entre diferentes adjetivos
corrplot(cor(Encuesta_Marcas[ , 1:9]), order="hclust")
#Por ultimo, vemos rapidamente que caracteristicas esten asociadas con cada marca con un heatmap
#Para ello es necesario crear una matrix con la media de puntuacion
Encuesta_MarcasMedia <- aggregate(. ~ brand, Encuesta_Marcas, mean)
row.names(Encuesta_MarcasMedia) <- Encuesta_MarcasMedia$brand
Encuesta_MarcasMedia$brand <- NULL
#luego dibujamos el heatmap
heatmap(as.matrix(Encuesta_MarcasMedia))
##### PRINCIPAL COMPONENT ANALYSIS #####
# Aplicando prcomp podemos analizar cuantos componentes son necesarios
#para explicar la variabilidad en la data de la encuesta de percepcion
EncuestaMarcas_PCA <- prcomp(Encuesta_Marcas[ , 1:9])
##### PRINCIPAL COMPONENT ANALYSIS #####
# Aplicando prcomp podemos analizar cuantos componentes son necesarios
#para explicar la variabilidad en la data de la encuesta de percepcion
EncuestaMarcas_PCA <- prcomp(Encuesta_Marcas[ , 1:9])
summary(EncuestaMarcas_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(EncuestaMarcas_PCA, type="l") #type l indica gr?fico de linea
biplot(EncuestaMarcas_PCA)
biplot(EncuestaMarcas_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(EncuestaMarcas_PCA, choices = 3:4, cex = c(0.3, 0.6))
biplot(EncuestaMarcas_PCA)
#Que sucede si trabajamos con los means?
Encuesta_MarcasMedia2 <- aggregate(. ~ brand, Encuesta_Marcas, mean)
EncuestaMarcas_PCAMean <- prcomp(Encuesta_MarcasMedia2[ , -1])
summary(EncuestaMarcas_PCAMean)
#Utilizamos la funcion scale para "normalizar" los datos a traves de la media y la sd
#por las dudas primero duplicamos el data frame para no perder la data inicial
describe(Encuesta_Marcas)
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale[ , 1:9] <- (scale(Encuesta_Marcas[ , 1:9]))
#utilizamos describe de librer?a psych que es para psicologia, pero muy util
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
corrplot(cor(Encuesta_MarcasScale[ , 1:9]), order="hclust") #pero la correlacion se mantiene igual
#utilizamos describe de librer?a psych que es para psicologia, pero muy util
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
corrplot(cor(Encuesta_MarcasScale[ , 1:9]), order="hclust") #pero la correlacion se mantiene igual
Encuesta_MarcasScale_PCA <- prcomp(Encuesta_MarcasScale[ , 1:9])
summary(Encuesta_MarcasScale_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(Encuesta_MarcasScale_PCA, type="l")
#veamos como se organizan los datos teniendo en cuenta los 2 primeros componentes
biplot(Encuesta_MarcasScale_PCA, cex = c(0.3, 0.6))
#Podriamos analizar todas las posibles combinaciones de los 4 primeros componentes
biplot(Encuesta_MarcasScale_PCA, choices = c(1,3), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = c(1,4), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = 3:4, cex = c(0.3, 0.6))
#Empleando medias de cada marca podemos entender donde se posicona cada marca
Encuesta_MarcasMedia_PCA <- prcomp(Encuesta_MarcasMedia2[ , -1], scale. = T)
summary(Encuesta_MarcasMedia_PCA)
biplot(Encuesta_MarcasMedia_PCA, cex = c(0.9, 0.6))
biplot(Encuesta_MarcasMedia_PCA, main="Posicionamiento Percibido", cex=c(0.8, 0.5))
#Grafiquemos de forma armonica los resultados de PCA con otros paquetes
#que ayudar a generar contenidos más vistosos como es factoextra
install.packages("factoextra")
library("factoextra")
get_pca_var(EncuestaMarcas_PCA) #me permite identificar el nombre de las variables
fviz_pca_var(EncuestaMarcas_PCA, col.var = "blue")
fviz_pca_var(EncuestaMarcas_PCA, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # evita overlaping del texto
)
fviz_pca_var(Encuesta_MarcasMedia_PCA, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_pca_ind(Encuesta_MarcasMedia_PCA, col.ind = "cos2",
col.var="contrib",
habillage = Encuesta_MarcasMedia2$brand,
repel = TRUE)
setwd("~/DataScience/EAE/Cursos/PerformanceAnalysis/Clase7")
#***********************************************************T de Student para muestras independientes
#setwd("H:/CLASES DE R EN BUSINESS SCHOOL")
encuesta <- read.table("encuesta.dat", header=T, sep="\t",dec=',')
str(encuesta)
# Testeando variables de ingles y sexo
ingles <- encuesta$FluidezVerbalIngles
genero <- as.factor (encuesta$Sexo)
by(ingles,genero,mean) # vamos a poner a prueba que estas dos medias son iguales (H0)
# T.Test de Ingles (dependiente) definida en base a Genero.
# var.equal asumiendo el supuesto de hocedasticidad (Varianzas iguales)
t.test(ingles ~ genero,var.equal=T)# la fluidez va a ser definida (~) a partir del genero
#************************************************************T de Student para muestras relacionadas
#*Vamos a comparar una variable cuantitativa medida dos veces en el tiempo
#*Solo necesitamos el supuesto de normalidad
#*Por ejemplo, la nota esperada en la PAU antes y despu?s de realizar el examen
esperadapre <- encuesta$NotaEsperada
esperadapost <- sample(0:10,81,replace = T)
diferencias <- esperadapost- esperadapre; diferencias #los valores negativos
# Paired T que las muestras son no independientes, estan relacionadas.
t.test(esperadapre, esperadapost, paired=T)
str(agregados)
#Ej 2.Abre la base de datos 'agregados.csv'
agregados <- read.table("agregados.csv", header=T, sep="\t",dec=',')
str(agregados)
agregados[1:1700,]
View(agregados)
View(agregados)
#Ej 2.Abre la base de datos 'agregados.csv'
agregados <- read.csv("agregados.csv", header=T, sep="\t",dec=',')
View(agregados)
View(agregados)
#Ej 2.Abre la base de datos 'agregados.csv'
agregados <- read.csv("agregados.csv", header=T, sep="\t",dec=',')
#Ej 2.Abre la base de datos 'agregados.csv'
agregados <- read.csv("agregados.csv", header=T)
View(agregados)
View(agregados)
agregados[1:1730,]
agg1 <- agregados[1:1730,]
View(agg1)
View(agg1)
#Ej 2.Abre la base de datos 'agregados.csv'
agregados <- read.csv("agregados.csv", header=T)
agg1 <- agregados[1:1729,]
str(agg1)
#2.1 Genera de manera aleatoria la variable categorica TestDico que contenga valores si,no
# (como si la CCAA hizo tests o no)
library(deplyr)
#2.1 Genera de manera aleatoria la variable categorica TestDico que contenga valores si,no
# (como si la CCAA hizo tests o no)
library(dplyr)
cat <- sample(c(1,0), size=1729, replace=TRUE)
agg1 %>% mutate(Pruebas = cat)
agg1$Pruebas <- revalue(agg1$Pruebas, c(1="Yes"))
weather4 <- agg1 %>%
mutate(Pruebas = ifelse(Pruebas == 1,"Yes"))
weather4 <- agg1 %>%
mutate(agg1$Pruebas = ifelse(Pruebas == 1,"Yes"))
weather4 <- agg1 %>%
mutate(Pruebas = ifelse(Pruebas == 1,"Yes"))
dat <- lapply(agg1, factor, levels = c(0, 1), labels = c("no", "yes"))
View(dat)
View(dat)
dat <- lapply(agg1$Pruebas, factor, levels = c(0, 1), labels = c("no", "yes"))
dat <- lapply(agg1$Pruebas, factor, levels = c(0, 1), labels = c("no", "yes"))
dat <- lapply(cat, factor, levels = c(0, 1), labels = c("no", "yes"))
View(dat)
View(dat)
agg1[Pruebas==0] <- 'no'
cat[cat==0] <- 'no'
cat1 <- cat[cat==0] <- 'no'
cat[cat==1] <- 'yes'
agg1 %>% mutate(Pruebas = cat)
View(agg1)
View(agg1)
agg1 %>% mutate(Pruebas = cat)
agg1 <- agg1 %>% mutate(Pruebas = cat)
View(agg1)
View(agg1)
cat[cat==1] <- 'si'
cat[cat==1] <- 'si'
cat[cat=='yes'] <- 'si'
agg1 <- agg1 %>% mutate(TestDico = cat)
View(agg1)
View(agg1)
agg1$Pruebas <- NULL
View(agg1)
View(agg1)
View(agg1)
##2.2. haz un analisis estadistico que pruebe si la diferencia en hospitalizados es diferente
## entre aquellos casos que dieron positivo en el test y aquellos que no
agg1[!is.na(agg1$Hospitalizados)]
##2.2. haz un analisis estadistico que pruebe si la diferencia en hospitalizados es diferente
## entre aquellos casos que dieron positivo en el test y aquellos que no
agg1[!is.na(agg1$Hospitalizados),]
##2.2. haz un analisis estadistico que pruebe si la diferencia en hospitalizados es diferente
## entre aquellos casos que dieron positivo en el test y aquellos que no
agg1[!is.na(agg1$Hospitalizados),]
##2.2. haz un analisis estadistico que pruebe si la diferencia en hospitalizados es diferente
## entre aquellos casos que dieron positivo en el test y aquellos que no
agg2<-agg1[!is.na(agg1$Hospitalizados),]
View(agg2)
View(agg2)
hs <- agg2[agg2$TestDico == 'si',"Hospitalizados"]
hn <- agg2[agg2$TestDico == 'no',"Hospitalizados"]
View(encuesta)
by(ingles,genero,mean) # vamos a poner a prueba que estas dos medias son iguales (H0)
h <- agg2$Hospitalizados
td <- as.factor (agg2$TestDico)
by(ingles,genero,mean)
t.test(h ~ td,var.equal=T)
by(ingles,genero,mean) # vamos a poner a prueba que estas dos medias son iguales (H0)
by(h,td,mean)
#Ej. 1. Calcula la probabilidad de
#*1) una variable que se distribuye normalmente es mayor a 3
# pnorm
pnorm(3)
#Ej. 1. Calcula la probabilidad de
#*1) una variable que se distribuye normalmente es mayor a 3
# pnorm
1 - pnorm(3) # probabilidad de obtener un 3 o menos en la distro de curva normal es..
#*2) una variable que se distribute normalmente con media = 35 y DT = 6 es mayor a 42
1 - pnorm(42, mean=35, sd=6)
dnorm(42)
pnorm(42)
dnorm(0)
pnorm(0)
TestDico <- sample(c('si', 'no'), 1729, replace = T)
agg2<-agg1
h <- agg2$Hospitalizados
td <- as.factor (agg2$TestDico)
by(h,td,mean)
agg2<-agg1
View(agg2)
View(agg2)
h <- agg2$Hospitalizados
td <- as.factor (agg2$TestDico)
by(h,td,mean)
t.test(h ~ td,var.equal=T)
?var.test # Homocedasticidad
france <- c(80, 20)
pd <- data.frame(Franch = franche)
pd <- data.frame(Franch = france)
pd
pd <- data.frame(France = france)
pd
library(tidyverse) #transformar y visualizar la data
#library(psych) #normalizar los datos
library(corrplot) #graficar correlaciones
#cargamos los datos, asegurando que se generan 10 columnas con los valores
Encuesta_Marcas <- read.csv("PercepcionMarca_dataset.csv", stringsAsFactors = F) %>%
select(-1) %>% #la primera columna es el index de cada fila y no es relevante, la descarto
mutate(brand = as.factor(brand))
head(Encuesta_Marcas)
summary(Encuesta_Marcas)
table(Encuesta_Marcas$brand)
#graficamos la correlaci?n entre los datos para ir explorando la relaci?n entre diferentes adjetivos
corrplot(cor(Encuesta_Marcas[ , 1:9]), order="hclust")
#Por ultimo, vemos rapidamente que caracteristicas esten asociadas con cada marca con un heatmap
#Para ello es necesario crear una matrix con la media de puntuacion
Encuesta_MarcasMedia <- aggregate(. ~ brand, Encuesta_Marcas, mean)
row.names(Encuesta_MarcasMedia) <- Encuesta_MarcasMedia$brand
Encuesta_MarcasMedia$brand <- NULL
#luego dibujamos el heatmap
heatmap(as.matrix(Encuesta_MarcasMedia))
##### PRINCIPAL COMPONENT ANALYSIS #####
# Aplicando prcomp podemos analizar cuantos componentes son necesarios
#para explicar la variabilidad en la data de la encuesta de percepcion
EncuestaMarcas_PCA <- prcomp(Encuesta_Marcas[ , 1:9])
summary(EncuestaMarcas_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(EncuestaMarcas_PCA, type="l") #type l indica gr?fico de linea
biplot(EncuestaMarcas_PCA)
biplot(EncuestaMarcas_PCA, choices = c(1,9), cex = c(0.3, 0.6))
biplot(EncuestaMarcas_PCA, choices = 3:4, cex = c(0.3, 0.6))
#Que sucede si trabajamos con los means?
Encuesta_MarcasMedia2 <- aggregate(. ~ brand, Encuesta_Marcas, mean)
EncuestaMarcas_PCAMean <- prcomp(Encuesta_MarcasMedia2[ , -1])
summary(EncuestaMarcas_PCAMean)
#Utilizamos la funcion scale para "normalizar" los datos a traves de la media y la sd
#por las dudas primero duplicamos el data frame para no perder la data inicial
describe(Encuesta_Marcas)
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale[ , 1:9] <- (scale(Encuesta_Marcas[ , 1:9]))
#utilizamos describe de librer?a psych que es para psicologia, pero muy util
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
#Utilizamos la funcion scale para "normalizar" los datos a traves de la media y la sd
#por las dudas primero duplicamos el data frame para no perder la data inicial
describe(Encuesta_Marcas)
Encuesta_MarcasScale <- Encuesta_Marcas
Encuesta_MarcasScale[ , 1:9] <- (scale(Encuesta_Marcas[ , 1:9]))
#utilizamos describe de librer?a psych que es para psicologia, pero muy util
#vemos ahora que mean y kurtosis es 0, lo que ha dejado la data bastante uniforme
describe(Encuesta_MarcasScale)
corrplot(cor(Encuesta_MarcasScale[ , 1:9]), order="hclust") #pero la correlacion se mantiene igual
Encuesta_MarcasScale_PCA <- prcomp(Encuesta_MarcasScale[ , 1:9])
summary(Encuesta_MarcasScale_PCA) #al ser una lista, con summary podemos entender qu? hay dentro
plot(Encuesta_MarcasScale_PCA, type="l")
#veamos como se organizan los datos teniendo en cuenta los 2 primeros componentes
biplot(Encuesta_MarcasScale_PCA, cex = c(0.3, 0.6))
#Podriamos analizar todas las posibles combinaciones de los 4 primeros componentes
biplot(Encuesta_MarcasScale_PCA, choices = c(1,3), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = c(1,4), cex = c(0.3, 0.6))
biplot(Encuesta_MarcasScale_PCA, choices = 3:4, cex = c(0.3, 0.6))
#Empleando medias de cada marca podemos entender donde se posicona cada marca
Encuesta_MarcasMedia_PCA <- prcomp(Encuesta_MarcasMedia2[ , -1], scale. = T)
summary(Encuesta_MarcasMedia_PCA)
biplot(Encuesta_MarcasMedia_PCA, cex = c(0.9, 0.6))
biplot(Encuesta_MarcasMedia_PCA, main="Posicionamiento Percibido", cex=c(0.8, 0.5))
